name: CI

on:
  push:
    branches: [arc64]
  pull_request:
    branches: [arc64]

  workflow_dispatch:

env:
  toolchain_url: "https://github.com/foss-for-synopsys-dwc-arc-processors/arc-gnu-toolchain/releases/download/2022.03"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        targets:
          - cpu: hs4x
            toolchain: arc
            defconfig: haps_hs_defconfig
          # - cpu: hs5x
          #   toolchain: arc32
          #   defconfig: haps_hs5x_defconfig
          - cpu: hs6x
            toolchain: arc64
            defconfig: haps_arc64_defconfig
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        name: Checkout sources
        with:
          fetch-depth: 2

      - uses: actions/checkout@v2
        name: Checkout arc-kernel-ci
        with:
          repository: "foss-for-synopsys-dwc-arc-processors/arc-kernel-ci"
          path: ${{ github.workspace }}/arc-kernel-ci

      - name: Install apt dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get install -y --no-install-recommends \
            bc \
            bison \
            flex \
            gawk \
            gcc \
            libelf-dev \
            libncurses5-dev \
            libssl-dev \
            make

      - name: Download toolchain
        run: |
          curl -L -o toolchain.tar.gz ${{ env.toolchain_url }}/${{ matrix.targets.toolchain }}-glibc-2022.03.tar.gz
          mkdir -p ${{ github.workspace }}/toolchain
          tar -xzf toolchain.tar.gz --strip 1 -C ${{ github.workspace }}/toolchain

      - name: Build linux kernel for ${{ matrix.targets.cpu }}
        run: |
          export ARCH=arc
          export CROSS_COMPILE=${{ github.workspace }}/toolchain/bin/${{ matrix.targets.toolchain }}-linux-gnu-

          make ${{ matrix.targets.defconfig }}
          ./scripts/config --set-str CONFIG_INITRAMFS_SOURCE ${{ github.workspace }}/arc-kernel-ci/cpio/rootfs.cpio.${{ matrix.targets.cpu }}

          if [[ "${{ matrix.targets.cpu }}" =~ ^(hs5x|hs6x)$ ]]; then
            image_name="loader"
            image_path=${{ github.workspace }}/arch/arc/boot/loader
          else
            image_name="vmlinux"
            image_path="${{ github.workspace }}/vmlinux"
          fi

          make -j $(nproc) ${image_name}
          cp $image_path vmlinux-${{ matrix.targets.cpu }}
        shell: bash

      - name: Upload ${{ matrix.targets.cpu }} vmlinux
        uses: actions/upload-artifact@v2
        with:
          name: vmlinux-${{ matrix.targets.cpu }}
          path: vmlinux-${{ matrix.targets.cpu }}
          retention-days: 5

  test:
    needs: [build]
    runs-on: nsim
    strategy:
      matrix:
        targets: [hs4x, hs6x]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        name: Checkout arc-kernel-ci
        with:
          repository: "foss-for-synopsys-dwc-arc-processors/arc-kernel-ci"

      - name: Install pip requirements
        run: |
          pip3 install -r requirements.txt

      - name: Download ${{ matrix.targets }} vmlinux
        uses: actions/download-artifact@v2
        with:
          name: vmlinux-${{ matrix.targets }}

      - name: Run nSIM boot test on ${{ matrix.targets }}
        run: |
          ./boot-nsim-image.py \
            ${{ github.workspace }}/vmlinux-${{ matrix.targets }} \
            ${{ github.workspace }}/nsim/${{ matrix.targets }}.props
